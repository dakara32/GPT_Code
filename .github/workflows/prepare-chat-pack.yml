name: Prepare Chat Paste Pack
on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'CodeForChat/**'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Chat Pack を生成（CodeForChat/ 以下）
      - name: Build chat packs (CodeForChat/)
        run: |
          python -m pip install --upgrade pip
          python tools/make_chat_pack.py

      - name: Show generated files
        run: |
          echo "=== CodeForChat tree ==="
          find CodeForChat -maxdepth 2 -type f | sort || true
          echo "=== git status ==="
          git status --porcelain

      # 生成物を main にコミット（既存フロー）
      - name: Commit generated packs to main
        run: |
          set -eux
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name  "chat-pack-bot"
          git config user.email "bot@users.noreply.github.com"

          test -f CodeForChat/factor_pack/chat-pack.txt
          test -f CodeForChat/drift_pack/chat-pack.txt

          git add -A CodeForChat/ || true
          git add -f CodeForChat/ || true

          if ! git diff --cached --quiet; then
            git commit -m "chore(chat): update CodeForChat packs [skip ci]"
            git pull --rebase origin main || true
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

      - name: Prepare dist (only chat-pack files, unique names)
        run: |
          set -eux
          mkdir -p dist
          # *_pack/chat-pack.txt を <pack>-chat-pack.txt に複製
          for d in CodeForChat/*_pack ; do
            [ -d "$d" ] || continue
            pack="$(basename "$d")"                 # 例: factor_pack
            cp "$d/chat-pack.txt" "dist/${pack}-chat-pack.txt"
          done
          echo "== dist =="
          ls -l dist

      - name: Publish/Update Release "chat-pack-latest"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: chat-pack-latest
          name: Chat Pack (latest)
          make_latest: true
          draft: false
          prerelease: false
          files: |
            dist/*-chat-pack.txt
          overwrite_files: true
