name: Daily Stock Report

on:
  schedule:
    - cron: '30 23 * * *'    # JST 08:30 に相当（UTC 23:30）
  workflow_dispatch:        # 手動トリガーを有効化

jobs:
  build-and-report:
    runs-on: ubuntu-latest

    steps:
      # ────────────────────────────────────────────────────────────
      # 1. デバッグ用に最初に必ずログを出力
      - name: Debug start
        run: echo '🚀 DEBUG: workflow started'

      # ────────────────────────────────────────────────────────────
      # 2. コード取得
      - name: Checkout repository
        uses: actions/checkout@v3

      # ────────────────────────────────────────────────────────────
      # 3. Python セットアップ
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # ────────────────────────────────────────────────────────────
      # 4. 依存パッケージインストール
      - name: Install dependencies
        run: pip install -r requirements.txt

      # ────────────────────────────────────────────────────────────
      # 5. 分析＆レポート生成スクリプト実行
      - name: Run analysis script
        run: python analyze_and_email.py

      # ────────────────────────────────────────────────────────────
      # 6. メール送信
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          to: your@address.com
          subject: "【自動レポート】株価分析結果 $(date +'%Y-%m-%d')"
          body: |
            自動分析結果を添付しました。
            詳細はリポジトリ内ログをご参照ください。
          # attachments: ./report.csv  # 必要に応じて有効化

